# Generated by Django 3.1.2 on 2020-10-06 08:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_username', models.CharField(help_text='The user permissioned user account associated with this author', max_length=50)),
                ('name', models.CharField(help_text='The name displayed for this author', max_length=50)),
                ('bio', models.CharField(help_text='The biographical information for this blogger', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The title to display for this blog post', max_length=60)),
                ('posted', models.DateField(blank=True, null=True)),
                ('text', models.TextField(help_text='The body of the blog post')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.author')),
            ],
            options={
                'permissions': (('can_post', 'Can author blog posts'),),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='The user who authored this blog post', max_length=50)),
                ('posted', models.DateField(blank=True, null=True)),
                ('text', models.CharField(help_text='The text to display in the comment', max_length=500)),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.post')),
            ],
        ),
    ]
